name: Update Homebrew Formula

# Trigger this workflow when a new release is published
on:
  release:
    types: [published]  # Only trigger when release is published
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to update formula for'
        required: true
        type: string

jobs:
  update-homebrew-formula:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Determine version and download URL
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
          DOWNLOAD_URL="${{ github.event.release.tarball_url }}"
        else
          VERSION="${{ github.event.inputs.tag_name }}"
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/archive/refs/tags/${VERSION}.tar.gz"
        fi
        
        # Remove 'v' prefix if present
        VERSION_CLEAN=${VERSION#v}
        
        echo "version=${VERSION_CLEAN}" >> $GITHUB_OUTPUT
        echo "download_url=${DOWNLOAD_URL}" >> $GITHUB_OUTPUT
        echo "tag_name=${VERSION}" >> $GITHUB_OUTPUT
    
    - name: Calculate SHA256
      id: get_sha
      run: |
        # Download and calculate SHA256
        curl -L "${{ steps.get_version.outputs.download_url }}" -o release.tar.gz
        SHA256=$(sha256sum release.tar.gz | cut -d' ' -f1)
        echo "sha256=${SHA256}" >> $GITHUB_OUTPUT
        rm release.tar.gz
    
    - name: Checkout Homebrew tap repository
      uses: actions/checkout@v4
      with:
        repository: JPC-AV/homebrew-AV-Spex
        token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        path: homebrew-tap
    
    - name: Update formula
      run: |
        cd homebrew-tap
        
        # Show current formula before update
        echo "=== BEFORE UPDATE ==="
        cat Formula/AV-Spex.rb
        echo "======================"
        
        # Update the formula file in the correct location
        cat > Formula/AV-Spex.rb << 'EOF'
        class AvSpex < Formula
          include Language::Python::Virtualenv

          desc "Python project for NMAAHC media conservation lab"
          homepage "https://github.com/JPC-AV/video_qc_jpc_av"
          url "https://github.com/JPC-AV/video_qc_jpc_av/archive/refs/tags/v${{ steps.get_version.outputs.version }}.tar.gz"
          sha256 "${{ steps.get_sha.outputs.sha256 }}"
          license "GPL-3.0-only"

          depends_on "python@3.10"
          depends_on "pyqt"
          depends_on "qt@6"
          
          resource "setuptools" do # needed for pyqt6 
            url "https://files.pythonhosted.org/packages/92/ec/089608b791d210aec4e7f97488e67ab0d33add3efccb83a056cbafe3a2a6/setuptools-75.8.0.tar.gz"
            sha256 "c5afc8f407c626b8313a86e10311dd3f661c6cd9c09d4bf8c15c0e11f9f2b0e6"
          end

          resource "toml" do
            url "https://files.pythonhosted.org/packages/be/ba/1f744cdc819428fc6b5084ec34d9b30660f6f9daaf70eead706e3203ec3c/toml-0.10.2.tar.gz"
            sha256 "b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"
          end

          resource "art" do
            url "https://files.pythonhosted.org/packages/b6/15/6c4ac6bf544a01230bad5b45ce4f624051b9dc9567875da05cfdbfc2cafa/art-6.1.tar.gz"
            sha256 "6ab3031e3b7710039e73497b0e750cadfe04d4c1279ce3a123500dbafb9e1b64"
          end

          resource "colorlog" do
            url "https://files.pythonhosted.org/packages/78/6b/4e5481ddcdb9c255b2715f54c863629f1543e97bc8c309d1c5c131ad14f2/colorlog-6.7.0.tar.gz"
            sha256 "bd94bd21c1e13fac7bd3153f4bc3a7dc0eb0974b8bc2fdf1a989e474f6e582e5"
          end

          resource "appdirs" do
            url "https://files.pythonhosted.org/packages/d7/d8/05696357e0311f5b5c316d7b95f46c669dd9c15aaeecbb48c7d0aeb88c40/appdirs-1.4.4.tar.gz"
            sha256 "7d5d0167b2b1ba821647616af46a749d1c653740dd0d2415100fe26e27afdf41"
          end

          resource "lxml" do
            url "https://files.pythonhosted.org/packages/ef/f6/c15ca8e5646e937c148e147244817672cf920b56ac0bf2cc1512ae674be8/lxml-5.3.1.tar.gz"
            sha256 "106b7b5d2977b339f1e97efe2778e2ab20e99994cbb0ec5e55771ed0795920c8"
          end

          resource "plotly" do
            url "https://files.pythonhosted.org/packages/db/9e/31b2f0b8f2357cd5f3e992c76c3e4e85a5cbbad8b8c5f23d0684e3f4c608/plotly-5.23.0.tar.gz"
            sha256 "89e57d003a116303a34de6700862391367dd564222ab71f8531df70279fc0193"
          end


          def install
            venv = virtualenv_create(libexec, "python3")
            
            # Install all Python dependencies including PyQt6-sip but excluding PyQt6
            venv.pip_install resources.reject { |r| r.name == "plotly" || r.name == "lxml" }

            # Install plotly using direct pip command instead of venv.pip_install
            system libexec/"bin/python", "-m", "pip", "install", "--no-deps", "--only-binary", ":all:", "plotly==5.23.0"

            # Install lxml without dependencies
            system libexec/"bin/python", "-m", "pip", "install", "--no-deps", "--only-binary", ":all:", "lxml==5.3.1"

            # Install the package itself
            venv.pip_install_and_link buildpath
            
            # Create executables
            bin.install_symlink libexec/"bin/av-spex"
            bin.install_symlink libexec/"bin/av-spex-gui"
          end

          test do
            system bin/"av-spex", "--version"
          end
        end
        EOF
        
        # Show updated formula
        echo "=== AFTER UPDATE ==="
        cat Formula/AV-Spex.rb
        echo "====================="
    
    - name: Commit and push changes
      run: |
        cd homebrew-tap
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Show git status
        echo "=== GIT STATUS ==="
        git status
        echo "=================="
        
        # Show git diff
        echo "=== GIT DIFF ==="
        git diff Formula/AV-Spex.rb
        echo "================"
        
        # Always add the file and let git decide if there are changes
        git add Formula/AV-Spex.rb
        
        # Check if there are staged changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update AV-Spex to version ${{ steps.get_version.outputs.version }}"
          git push
        fi
    
    - name: Create Pull Request (alternative approach)
      if: failure()
      uses: peter-evans/create-pull-request@v5
      with:
        path: homebrew-tap
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update AV-Spex to version ${{ steps.get_version.outputs.version }}"
        title: "Update AV-Spex to version ${{ steps.get_version.outputs.version }}"
        body: |
          Automatically generated PR to update AV-Spex formula to version ${{ steps.get_version.outputs.version }}.
          
          Changes:
          - Updated URL to point to version ${{ steps.get_version.outputs.version }}
          - Updated SHA256 hash to ${{ steps.get_sha.outputs.sha256 }}
          
          This PR was created automatically by the Homebrew update workflow.
        branch: update-formula-v${{ steps.get_version.outputs.version }}
