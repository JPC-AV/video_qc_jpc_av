name: Test Apple Credentials

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      test_message:
        description: 'Test run description'
        required: false
        default: 'Testing Apple notarization credentials'

permissions:
  contents: read

jobs:
  test-credentials:
    runs-on: macos-latest
    
    steps:
    - name: Test Apple Notarization Credentials
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        echo "🧪 Testing Apple notarization credentials..."
        echo "📝 Test description: ${{ github.event.inputs.test_message }}"
        echo ""
        
        # Check if secrets exist
        if [ -z "$APPLE_ID" ]; then
          echo "❌ APPLE_ID secret is not set"
          exit 1
        fi
        
        if [ -z "$APPLE_ID_PASSWORD" ]; then
          echo "❌ APPLE_ID_PASSWORD secret is not set"
          exit 1
        fi
        
        if [ -z "$APPLE_TEAM_ID" ]; then
          echo "❌ APPLE_TEAM_ID secret is not set"
          exit 1
        fi
        
        # Display sanitized credential info
        echo "📧 Apple ID: ${APPLE_ID:0:3}***${APPLE_ID: -3}"
        echo "🏢 Team ID: ${APPLE_TEAM_ID:0:3}***${APPLE_TEAM_ID: -3}"
        echo "🔑 Password length: ${#APPLE_ID_PASSWORD} characters"
        echo ""
        
        # Validate Team ID format
        echo "🔍 Validating Team ID format..."
        if [[ $APPLE_TEAM_ID =~ ^[A-Z0-9]{10}$ ]]; then
          echo "✅ Team ID format is valid (10 alphanumeric characters)"
        else
          echo "❌ Team ID format is invalid!"
          echo "   Current: '$APPLE_TEAM_ID'"
          echo "   Length: ${#APPLE_TEAM_ID} characters"
          echo "   Expected: Exactly 10 alphanumeric characters (A-Z, 0-9)"
          exit 1
        fi
        echo ""
        
        # Validate Apple ID format
        echo "🔍 Validating Apple ID format..."
        if [[ $APPLE_ID =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
          echo "✅ Apple ID format looks valid"
        else
          echo "⚠️  Apple ID format might be invalid: ${APPLE_ID:0:10}..."
        fi
        echo ""
        
        # Test the credentials
        echo "🧪 Testing notarization credentials..."
        xcrun notarytool store-credentials "GITHUB_TEST_PROFILE" \
          --apple-id "$APPLE_ID" \
          --password "$APPLE_ID_PASSWORD" \
          --team-id "$APPLE_TEAM_ID" \
          --verbose 2>&1 || {
            echo ""
            echo "❌ Credential test failed!"
            echo ""
            echo "🔍 Common issues and solutions:"
            echo "1. 🔑 Password: Make sure you're using an APP-SPECIFIC password"
            echo "   - Go to appleid.apple.com > Security > App-Specific Passwords"
            echo "   - Generate a new password specifically for notarization"
            echo ""
            echo "2. 🏢 Team ID: Verify your exact Team ID"
            echo "   - Go to developer.apple.com/account"
            echo "   - Click 'Membership' in the left sidebar"
            echo "   - Copy the exact 'Team ID' (10 characters)"
            echo ""
            echo "3. 👤 Apple ID Permissions: Ensure your Apple ID has the right role"
            echo "   - Must be 'Admin' or 'App Manager' role for notarization"
            echo "   - Contact your team admin if you need role changes"
            echo ""
            echo "4. 🔐 2FA: Ensure two-factor authentication is enabled"
            echo ""
            exit 1
          }
        
        echo ""
        echo "✅ Credential test passed!"
        echo "🎉 Your Apple notarization credentials are working correctly"
        
        # Clean up the test profile
        echo ""
        echo "🧹 Cleaning up test profile..."
        xcrun notarytool delete-keychain-profile "GITHUB_TEST_PROFILE" 2>/dev/null || echo "Profile already removed"
        
        echo "✅ Test completed successfully!"
