name: Build macOS App

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-13  # Intel for maximum compatibility
    
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: '3.10'
        miniforge-version: latest
        activate-environment: JPC_AV
        auto-activate-base: false
        
    - name: Install dependencies
      shell: bash -el {0}
      env:
        MACOSX_DEPLOYMENT_TARGET: "11.0"  # Better compatibility
      run: |
        conda info
        which python
        python --version
        
        # Install PyInstaller via conda-forge
        conda install -c conda-forge pyinstaller -y
        
        # Force newer PyQt6 build (keeps your improvement)
        pip install "PyQt6>=6.7" --force-reinstall --no-deps
        pip install PyQt6-sip --force-reinstall
        
        # Install your package dependencies
        pip install -e .
        
        # Quick verification
        python -c "import AV_Spex; print('✅ AV_Spex imported successfully')"
        
    - name: Get version from pyproject.toml
      shell: bash -el {0}
      id: get_version
      run: |
        VERSION=$(grep -m 1 "version" pyproject.toml | grep -o '"[^"]*"' | sed 's/"//g')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Building AV-Spex version $VERSION for Intel with Rosetta 2 support"
        
    - name: Clean previous build artifacts
      shell: bash -el {0}
      run: |
        rm -rf dist/ build/
        
    - name: Build with PyInstaller
      shell: bash -el {0}
      env:
        MACOSX_DEPLOYMENT_TARGET: "11.0"
      run: |
        echo "Building Intel binary with macOS 11+ compatibility..."
        pyinstaller --noconfirm --log-level=INFO avspex.spec
        
    - name: Verify build
      shell: bash -el {0}
      run: |
        if [ -d "dist/AV-Spex.app" ]; then
          echo "✅ App bundle created successfully"
          file "dist/AV-Spex.app/Contents/MacOS/AV-Spex"
          test -x ./dist/AV-Spex.app/Contents/MacOS/AV-Spex && echo "✅ Executable is valid"
        else
          echo "❌ App bundle not found!"
          exit 1
        fi
        
    - name: Create build info
      shell: bash -el {0}
      run: |
        cat > dist/build-info.json << EOF
        {
          "version": "${{ steps.get_version.outputs.VERSION }}",
          "commit": "${{ github.sha }}",
          "ref": "${{ github.ref }}",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "workflow_run_id": "${{ github.run_id }}",
          "architecture": "x86_64",
          "python_version": "$(python --version)",
          "python_type": "conda",
          "compatibility": "Intel native, Apple Silicon via Rosetta 2"
        }
        EOF
        
    - name: Create app bundle archive
      shell: bash -el {0}
      run: |
        cd dist
        tar -czf AV-Spex-${{ steps.get_version.outputs.VERSION }}-x86_64-unsigned.tar.gz AV-Spex.app build-info.json
        echo "Archive created successfully"
        
    - name: Upload app bundle
      uses: actions/upload-artifact@v4
      with:
        name: av-spex-${{ steps.get_version.outputs.VERSION }}-x86_64-unsigned
        path: dist/AV-Spex-${{ steps.get_version.outputs.VERSION }}-x86_64-unsigned.tar.gz
        retention-days: 30
