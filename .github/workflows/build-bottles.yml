name: Build Bottles

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v0.8.4.5)'
        required: true
        type: string

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
            version: ventura
          - os: macos-14
            arch: arm64
            version: sonoma

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          core: false
          cask: false

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version
        id: version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          echo "📥 Input version: $VERSION"
          
          # Validate that we have a version that looks like a tag
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Expected format: v1.2.3"
            exit 1
          fi
          
          VERSION_CLEAN=${VERSION#v}
          echo "version=${VERSION_CLEAN}" >> $GITHUB_OUTPUT
          echo "tag_name=${VERSION}" >> $GITHUB_OUTPUT
          
          echo "✅ Building bottles for version: $VERSION_CLEAN"

      - name: Setup environment
        run: |
          # Disable auto-updates to prevent conflicts
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          export HOMEBREW_NO_INSTALL_UPGRADE=1
          
          echo "=== Initial Python State ==="
          which python3 || echo "No python3 found"
          python3 --version || echo "python3 not working"
          echo "==========================="
          
          # Clean up any brew issues
          brew cleanup || true

      - name: Install Python 3.13 from bottle
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          export HOMEBREW_NO_INSTALL_UPGRADE=1
          
          # Force bottle installation for Python
          brew fetch --force-bottle python@3.13
          brew install $(brew --cache)/python@3.13*.bottle.tar.gz || brew install python@3.13
          
          # Force link python@3.13
          echo "Force linking python@3.13..."
          brew unlink python@3.13 || true
          brew link --force --overwrite python@3.13
          
          # Set up paths based on architecture
          if [[ "${{ matrix.os }}" == "macos-14" ]]; then
            HOMEBREW_PREFIX="/opt/homebrew"
          else
            HOMEBREW_PREFIX="/usr/local"
          fi
          
          # Add Python 3.13 to PATH
          export PATH="${HOMEBREW_PREFIX}/opt/python@3.13/bin:$PATH"
          echo "${HOMEBREW_PREFIX}/opt/python@3.13/bin" >> $GITHUB_PATH
          
          # Verify Python installation
          echo "=== Python Verification ==="
          echo "PATH: $PATH"
          which python3.13
          python3.13 --version
          which pip3.13
          pip3.13 --version
          echo "=========================="
          
          # Verify we're actually using 3.13
          PYTHON_VERSION=$(python3.13 --version | grep -o "3\.13\.")
          if [[ -z "$PYTHON_VERSION" ]]; then
            echo "❌ ERROR: Not using Python 3.13!"
            echo "Current python3.13 version: $(python3.13 --version)"
            exit 1
          fi
          
          echo "✅ Successfully using Python 3.13"

      - name: Install PyQt and Qt from bottles
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          export HOMEBREW_NO_INSTALL_UPGRADE=1
          export HOMEBREW_FORCE_BOTTLE=1
          
          echo "Fetching Qt and PyQt bottles..."
          
          # Fetch bottles for Qt and its dependencies
          brew fetch --force-bottle qt@6 || echo "Qt fetch warning"
          brew fetch --force-bottle pyqt@6 || echo "PyQt fetch warning"
          
          # Also fetch common dependencies that might be needed
          brew fetch --force-bottle ca-certificates || true
          brew fetch --force-bottle freetype || true
          brew fetch --force-bottle dbus || true
          brew fetch --force-bottle double-conversion || true
          brew fetch --force-bottle hunspell || true
          brew fetch --force-bottle jasper || true
          brew fetch --force-bottle libb2 || true
          brew fetch --force-bottle libmng || true
          brew fetch --force-bottle md4c || true
          brew fetch --force-bottle assimp || true
          
          echo "Installing from bottles..."
          
          # Install dependencies first
          brew install --force-bottle ca-certificates || true
          brew install --force-bottle freetype || true
          brew install --force-bottle dbus || true
          brew install --force-bottle double-conversion || true
          brew install --force-bottle hunspell || true
          brew install --force-bottle jasper || true
          brew install --force-bottle libb2 || true
          brew install --force-bottle libmng || true
          brew install --force-bottle md4c || true
          brew install --force-bottle assimp || true
          
          # Now install Qt and PyQt (using either bottle or fallback)
          brew install qt@6 || echo "Qt installation had issues"
          brew install pyqt@6 || brew install pyqt || echo "PyQt installation had issues"
          
          echo "Dependencies installed"

      - name: Build bottle
        id: build
        timeout-minutes: 180
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          export HOMEBREW_NO_INSTALL_UPGRADE=1
          
          # Set up paths based on architecture
          if [[ "${{ matrix.os }}" == "macos-14" ]]; then
            HOMEBREW_PREFIX="/opt/homebrew"
          else
            HOMEBREW_PREFIX="/usr/local"
          fi
          
          # Ensure Python path is set
          export PATH="${HOMEBREW_PREFIX}/opt/python@3.13/bin:$PATH"
          
          # Tap the repository
          brew tap JPC-AV/AV-Spex https://github.com/JPC-AV/homebrew-AV-Spex
          
          # Update tap to get the latest formula
          brew tap --repair
          brew update
          
          echo "=== Final Python Check ==="
          echo "PATH: $PATH"
          python3.13 --version || python3 --version
          pip3.13 --version || pip3 --version
          brew list | grep python
          echo "=========================="
          
          # Build the bottle
          echo "Building bottle..."
          brew install --build-bottle JPC-AV/AV-Spex/av-spex
          
          echo "Creating bottle..."
          brew bottle --verbose --json --root-url=https://github.com/JPC-AV/video_qc_jpc_av/releases/download/${{ steps.version.outputs.tag_name }} JPC-AV/AV-Spex/av-spex
          
          # Create copies with names that Homebrew expects
          echo "Creating Homebrew-compatible copies..."
          for bottle_file in av-spex--*.bottle.tar.gz; do
            if [[ -f "$bottle_file" ]]; then
              new_name=$(echo "$bottle_file" | sed 's/av-spex--/av-spex-/')
              cp "$bottle_file" "$new_name"
              echo "Created copy: $bottle_file → $new_name"
            fi
          done
          
          BOTTLE_FILE=$(ls av-spex--*.bottle.tar.gz | head -1)
          echo "bottle_file=${BOTTLE_FILE}" >> $GITHUB_OUTPUT
          
          echo "Created bottle: $BOTTLE_FILE"

      - name: Test bottle installation
        run: |
          echo "Testing bottle installation..."
          brew uninstall JPC-AV/AV-Spex/av-spex
          
          # Copy the bottle to Homebrew's cache directory
          cp av-spex--*.bottle.tar.gz $(brew --cache)/
          
          # Now install the formula - it will use the cached bottle
          HOMEBREW_NO_AUTO_UPDATE=1 brew install JPC-AV/AV-Spex/av-spex
          
          echo "Testing av-spex commands..."
          av-spex --version
          av-spex --help

      - name: Upload bottle
        uses: actions/upload-artifact@v4
        with:
          name: bottle-${{ matrix.version }}-${{ steps.version.outputs.tag_name }}
          path: |
            av-spex--*.bottle.tar.gz
            av-spex--*.bottle.json
          retention-days: 30
